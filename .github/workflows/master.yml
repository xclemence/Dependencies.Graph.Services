name: Master

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/doc/**'
      - '**/README.md'
      - '**/LICENSE'
      - '**/.typo-ci.yml'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/doc/**'
      - '**/README.md'
      - '**/LICENSE'
      - '**/.typo-ci.yml'

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
      
    - name: Install dependencies
      run: dotnet restore Dependencies.Graph.Services.sln
      working-directory: src

    - name: Install sonar scanner
      run: dotnet tool install --global dotnet-sonarscanner --version 4.10.0
      working-directory: src

    - name: start sonar scanner
      run: |
        dotnet sonarscanner begin /o:xclemence \
        /k:xclemence_dependencies-graph-services \
        /d:sonar.host.url=https://sonarcloud.io \
        /d:sonar.exclusions=**/obj/**,**/*.dll \
        /d:sonar.cs.opencover.reportsPaths=./**/coverage.opencover.xml \
        /d:sonar.cs.vstest.reportsPaths=./**/*.trx

      working-directory: src
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
    - name: Build
      run: dotnet build Dependencies.Graph.Services.sln --configuration Release --no-restore
      working-directory: src
    
    - name: Test
      run: dotnet test Dependencies.Graph.Services.sln --configuration Release --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      working-directory: src

    - name: stop sonar scanner
      run: dotnet sonarscanner end 
      working-directory: src
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build the Docker image
      run: docker build . --file Dependencies.Graph.Api/Dockerfile --tag dependencies-graph-api:test
      working-directory: src
    
